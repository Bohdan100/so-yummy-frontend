{"version":3,"file":"static/js/144.a46be939.chunk.js","mappings":"2TAIaA,EAAYC,EAAAA,GAAAA,IAAH,0aACP,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAxB,IASkB,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAxB,IAClB,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAxB,IAKgB,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAxB,IAClB,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAxB,IAQLC,GAAaJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,4UAMD,SAAAC,GAAC,OAAIA,EAAEC,MAAMI,OAAOC,SAAnB,IACJ,SAAAN,GAAC,OAAIA,EAAEC,MAAMM,MAAMC,IAAlB,IAEJ,SAAAR,GAAC,OAAIA,EAAEC,MAAMQ,YAAYC,IAAxB,IACiB,SAAAV,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAxB,IAMtBS,EAAQZ,EAAAA,GAAAA,GAAH,oUAED,SAAAC,GAAC,OAAIA,EAAEC,MAAMW,MAAMF,IAAlB,IAED,SAAAV,GAAC,OAAIA,EAAEC,MAAMY,YAAY,EAAxB,IAED,SAAAb,GAAC,OAAIA,EAAEC,MAAMa,YAAYC,QAAxB,IACE,SAAAf,GAAC,OAAIA,EAAEC,MAAMe,eAAeC,OAA3B,IAEV,SAAAjB,GAAC,OAAIA,EAAEC,MAAMI,OAAOa,YAAnB,IACsB,SAAAlB,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAxB,IAMtBiB,EAAiBpB,EAAAA,GAAAA,IAAH,iLAMO,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAxB,IAKtBkB,EAAQrB,EAAAA,GAAAA,MAAH,6GAQLsB,GAAQtB,EAAAA,EAAAA,IAAOuB,EAAAA,GAAPvB,CAAH,mmBAKD,SAAAC,GAAC,OAAIA,EAAEC,MAAMY,YAAY,EAAxB,IACD,SAAAb,GAAC,OAAIA,EAAEC,MAAMa,YAAYS,YAAxB,IACE,SAAAvB,GAAC,OAAIA,EAAEC,MAAMe,eAAeC,OAA3B,IAGV,SAAAjB,GAAC,OAAIA,EAAEC,MAAMI,OAAOmB,OAAnB,IAGO,SAAAxB,GAAC,OAAIA,EAAEC,MAAMM,MAAMkB,WAAlB,IACR,SAAAzB,GAAC,OAAIA,EAAEC,MAAMyB,QAAQC,aAApB,IACG,SAAA3B,GAAC,OAAIA,EAAEC,MAAMQ,YAAYC,IAAxB,IACiB,SAAAV,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAxB,IAMf,SAAAF,GAAC,OAAIA,EAAEC,MAAMI,OAAOmB,OAAnB,IACR,SAAAxB,GAAC,OAAIA,EAAEC,MAAMI,OAAOmB,OAAnB,IAQDI,EAAS7B,EAAAA,GAAAA,OAAH,6kBAMF,SAAAC,GAAC,OAAIA,EAAEC,MAAMW,MAAMF,IAAlB,IAID,SAAAV,GAAC,OAAIA,EAAEC,MAAMY,YAAY,EAAxB,IACD,SAAAb,GAAC,OAAIA,EAAEC,MAAMa,YAAYe,OAAxB,IACP,SAAA7B,GAAC,OAAIA,EAAEC,MAAMI,OAAOa,YAAnB,IACU,SAAAlB,GAAC,OAAIA,EAAEC,MAAMI,OAAOyB,UAAnB,IACJ,SAAA9B,GAAC,OAAIA,EAAEC,MAAMM,MAAMkB,WAAlB,IAIJ,SAAAzB,GAAC,OAAIA,EAAEC,MAAMQ,YAAYC,IAAxB,IACiB,SAAAV,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAxB,IAKtB,SAAAF,GAAC,OAAIA,EAAEC,MAAMI,OAAO0B,UAAnB,IAODC,GAAajC,EAAAA,EAAAA,IAAOkC,EAAAA,GAAPlC,CAAH,qZAMN,SAAAC,GAAC,OAAIA,EAAEC,MAAMY,YAAY,EAAxB,IACD,SAAAb,GAAC,OAAIA,EAAEC,MAAMa,YAAYS,YAAxB,IACP,SAAAvB,GAAC,OAAIA,EAAEC,MAAMI,OAAOmB,OAAnB,IAEI,SAAAxB,GAAC,OAAIA,EAAEC,MAAMQ,YAAYC,IAAxB,IACiB,SAAAV,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAxB,IAUtBgC,EAAWnC,EAAAA,GAAAA,IAAH,6IAGJ,SAAAC,GAAC,OAAIA,EAAEC,MAAMY,YAAY,EAAxB,IACD,SAAAb,GAAC,OAAIA,EAAEC,MAAMa,YAAYS,YAAxB,IACP,SAAAvB,GAAC,OAAIA,EAAEC,MAAMI,OAAOmB,OAAnB,IACI,SAAAxB,GAAC,OAAIA,EAAEC,MAAMQ,YAAYC,IAAxB,I,UCnEjB,EA7EqB,WACnB,IAAMyB,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAgB,mCAAG,oGAASC,EAAT,EAASA,KAAMC,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,SAAcC,EAApC,EAAoCA,UAApC,SACjBN,GAASO,EAAAA,EAAAA,IAAS,CAAEJ,KAAAA,EAAMC,MAAAA,EAAOC,SAAAA,KAAaG,MAAK,SAAAC,GAAG,OAC1DA,EAAIC,MAAQC,QAAQC,IAAIH,EAAII,SAAWP,GADmB,IADrC,uBAIjBN,GAASc,EAAAA,EAAAA,OAAiBN,MAAK,SAAAC,GAAG,OACtCA,EAAIC,MAAQC,QAAQC,IAAIH,EAAII,SAAWP,GADD,IAJjB,2CAAH,wDAStB,OACE,SAAC9C,EAAD,WACE,SAAC,KAAD,CACEuD,cAAe,CAAEZ,KAAM,GAAIC,MAAO,GAAIC,SAAU,IAChDW,SAAUd,EACVe,iBAAkBC,EAAAA,GAClBC,gBAAc,EAJhB,SAMG,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,QAASC,EAA7B,EAA6BA,MAA7B,OACC,UAAC1D,EAAD,YACE,SAACQ,EAAD,4BACA,UAACQ,EAAD,YACE,UAACC,EAAD,CAAO0C,QAAQ,OAAf,WACE,SAACzC,EAAD,CACE0C,KAAK,OACLtB,KAAK,OACLuB,YAAY,OACZC,SAAU9B,KAEZ,SAAC,KAAD,IACCuB,EAAOjB,MAAQkB,EAAQlB,MACtB,SAACP,EAAD,UAAWwB,EAAOjB,OAChB,SAEN,UAACrB,EAAD,CAAO0C,QAAQ,QAAf,WACE,SAACzC,EAAD,CACE0C,KAAK,QACLtB,KAAK,QACLuB,YAAY,QACZC,SAAU9B,KAEZ,SAAC,KAAD,IACCuB,EAAOhB,OAASiB,EAAQjB,OACvB,SAACR,EAAD,UAAWwB,EAAOhB,QAChB,SAEN,UAACtB,EAAD,CAAO0C,QAAQ,WAAf,WACE,SAACzC,EAAD,CACE0C,KAAK,WACLtB,KAAK,WACLuB,YAAY,WACZC,SAAU9B,KAEZ,SAAC,KAAD,IACCuB,EAAOf,UAAYgB,EAAQhB,UAC1B,SAACT,EAAD,UAAWwB,EAAOf,WAChB,YAGR,SAACf,EAAD,CACEmC,KAAK,SACLtB,KAAK,SACLwB,SAAU9B,IAAcyB,IAAYC,EAHtC,sBAOA,SAAC7B,EAAD,CAAYkC,GAAG,UAAf,uBAhDH,KAsDR,E,SC1FD,EANqB,WACnB,OACE,SAACC,EAAA,EAAD,WAAU,SAAC,EAAD,KAEb,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { Field, Form } from 'formik';\n\nexport const Container = styled.div`\n  max-width: ${p => p.theme.breakpoints[0]};\n  display: flex;\n  align-self: center;\n  margin: 0 auto;\n  padding: 0 20px;\n  position: absolute;\n  z-index: 2;\n  top: 302px;\n\n  @media screen and (min-width: ${p => p.theme.breakpoints[1]}) {\n    max-width: ${p => p.theme.breakpoints[1]};\n    padding: 0 32px;\n    top: 443px;\n  }\n\n  @media screen and (min-width: ${p => p.theme.breakpoints[2]}) {\n    max-width: ${p => p.theme.breakpoints[2]};\n    padding: 0px;\n    position: relative;\n    margin: 0;\n    top: 0px;\n  }\n`;\n\nexport const StyledForm = styled(Form)`\n  width: 335px;\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  padding: 32px 28px;\n  background-color: ${p => p.theme.colors.formBgCol};\n  border-radius: ${p => p.theme.radii.form};\n  box-shadow: 0px 4px 48px rgba(0, 0, 0, 0.1);\n  transition: ${p => p.theme.transitions.main};\n  @media screen and (min-width: ${p => p.theme.breakpoints[1]}) {\n    width: 500px;\n    padding: 44px 50px;\n  }\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 18px;\n  font-family: ${p => p.theme.fonts.main};\n  font-style: normal;\n  font-weight: ${p => p.theme.fontWeights[2]};\n  font-size: 24px;\n  line-height: ${p => p.theme.lineHeights.userLink};\n  letter-spacing: ${p => p.theme.letterSpacings.content};\n  font-feature-settings: 'liga' off;\n  color: ${p => p.theme.colors.btnTextLight};\n  @media screen and (min-width: ${p => p.theme.breakpoints[1]}) {\n    margin-bottom: 32px;\n    font-size: 28px;\n  }\n`;\n\nexport const InputContainer = styled.div`\n  width: 100%;\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  @media screen and (min-width: ${p => p.theme.breakpoints[1]}) {\n    gap: 24px;\n  }\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  &:hover > *,\n  &:focus-within > * {\n    opacity: 1;\n  }\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  display: block;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: ${p => p.theme.fontWeights[0]};\n  line-height: ${p => p.theme.lineHeights.searchSelect};\n  letter-spacing: ${p => p.theme.letterSpacings.content};\n  padding: 12px 12px 12px 40px;\n  opacity: 0.8;\n  color: ${p => p.theme.colors.inputPh};\n  outline: none;\n  background-color: transparent;\n  border-radius: ${p => p.theme.radii.btnStandart};\n  border: ${p => p.theme.borders.inputStandart};\n  transition: ${p => p.theme.transitions.main};\n  @media screen and (min-width: ${p => p.theme.breakpoints[1]}) {\n    font-size: 18px;\n    padding: 16px 16px 16px 50px;\n  }\n  &:focus:not(:disabled),\n  &:hover:not(:disabled) {\n    border-color: ${p => p.theme.colors.inputPh};\n    color: ${p => p.theme.colors.inputPh};\n    opacity: 1;\n  }\n  &:disabled {\n    cursor: not-allowed;\n  }\n`;\n\nexport const Button = styled.button`\n  align-self: center;\n  width: 100%;\n  height: 45px;\n  padding: 12px;\n  display: block;\n  font-family: ${p => p.theme.fonts.main};\n  font-style: normal;\n  font-size: 16px;\n  margin-top: 28px;\n  font-weight: ${p => p.theme.fontWeights[0]};\n  line-height: ${p => p.theme.lineHeights.btnText};\n  color: ${p => p.theme.colors.btnTextLight};\n  background-color: ${p => p.theme.colors.mainAccent};\n  border-radius: ${p => p.theme.radii.btnStandart};\n  border: transparent;\n  outline: transparent;\n  cursor: pointer;\n  transition: ${p => p.theme.transitions.main};\n  @media screen and (min-width: ${p => p.theme.breakpoints[1]}) {\n    margin-top: 50px;\n  }\n  &:focus:not(:disabled),\n  &:hover:not(:disabled) {\n    color: ${p => p.theme.colors.btnHoverBg};\n  }\n  &:disabled {\n    cursor: not-allowed;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  position: absolute;\n  bottom: -21px;\n  left: 50%;\n  transform: translateX(-50%) translateY(50%);\n  font-size: 14px;\n  font-weight: ${p => p.theme.fontWeights[0]};\n  line-height: ${p => p.theme.lineHeights.searchSelect};\n  color: ${p => p.theme.colors.inputPh};\n  text-decoration-line: underline;\n  transition: ${p => p.theme.transitions.main};\n  @media screen and (min-width: ${p => p.theme.breakpoints[1]}) {\n    font-size: 16px;\n    bottom: -18px;\n  }\n  &:focus,\n  &:hover {\n    text-decoration: none;\n  }\n`;\n\nexport const ErrorBox = styled.div`\n  font-size: 14px;\n  margin-top: 8px;\n  font-weight: ${p => p.theme.fontWeights[0]};\n  line-height: ${p => p.theme.lineHeights.searchSelect};\n  color: ${p => p.theme.colors.inputPh};\n  transition: ${p => p.theme.transitions.main};\n`;\n\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Formik } from 'formik';\nimport { selectIsLoading } from 'redux/Auth/authSelectors';\nimport { register } from 'redux/Auth/authOperations';\nimport { fetchProducts } from 'redux/ShoppingList/shoppingListOperations';\nimport { registerValidationSchema } from '../../helpers';\n\nimport {\n  UserIconStyled,\n  EmailIconStyled,\n  LockIconStyled,\n} from '../../components/AuthIcons';\n\nimport {\n  Container,\n  Label,\n  Input,\n  StyledForm,\n  Title,\n  InputContainer,\n  Button,\n  StyledLink,\n  ErrorBox,\n} from './RegisterForm.styled';\n\nconst RegisterForm = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  const handleSubmitForm = async ({ name, email, password }, { resetForm }) => {\n    await dispatch(register({ name, email, password })).then(res =>\n      res.error ? console.log(res.payload) : resetForm()\n    );\n    await dispatch(fetchProducts()).then(res =>\n      res.error ? console.log(res.payload) : resetForm()\n    );\n  };\n\n  return (\n    <Container>\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        onSubmit={handleSubmitForm}\n        validationSchema={registerValidationSchema}\n        validateOnBlur\n      >\n        {({ errors, touched, isValid, dirty }) => (\n          <StyledForm>\n            <Title>Registration</Title>\n            <InputContainer>\n              <Label htmlFor=\"name\">\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"Name\"\n                  disabled={isLoading}\n                />\n                <UserIconStyled />\n                {errors.name && touched.name ? (\n                  <ErrorBox>{errors.name}</ErrorBox>\n                ) : null}\n              </Label>\n              <Label htmlFor=\"email\">\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  disabled={isLoading}\n                />\n                <EmailIconStyled />\n                {errors.email && touched.email ? (\n                  <ErrorBox>{errors.email}</ErrorBox>\n                ) : null}\n              </Label>\n              <Label htmlFor=\"password\">\n                <Input\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  disabled={isLoading}\n                />\n                <LockIconStyled />\n                {errors.password && touched.password ? (\n                  <ErrorBox>{errors.password}</ErrorBox>\n                ) : null}\n              </Label>\n            </InputContainer>\n            <Button\n              type=\"submit\"\n              name=\"button\"\n              disabled={isLoading || !isValid || !dirty}\n            >\n              Sign up\n            </Button>\n            <StyledLink to=\"/signin\">Sign In</StyledLink>\n          </StyledForm>\n        )}\n      </Formik>\n    </Container>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from '../../components/RegisterForm';\nimport AuthBody from '../../components/AuthBody';\n\n\nconst RegisterPage = () => {\n  return (\n    <AuthBody><RegisterForm /></AuthBody>\n  )\n};\n\nexport default RegisterPage;\n"],"names":["Container","styled","p","theme","breakpoints","StyledForm","Form","colors","formBgCol","radii","form","transitions","main","Title","fonts","fontWeights","lineHeights","userLink","letterSpacings","content","btnTextLight","InputContainer","Label","Input","Field","searchSelect","inputPh","btnStandart","borders","inputStandart","Button","btnText","mainAccent","btnHoverBg","StyledLink","Link","ErrorBox","isLoading","useSelector","selectIsLoading","dispatch","useDispatch","handleSubmitForm","name","email","password","resetForm","register","then","res","error","console","log","payload","fetchProducts","initialValues","onSubmit","validationSchema","registerValidationSchema","validateOnBlur","errors","touched","isValid","dirty","htmlFor","type","placeholder","disabled","to","AuthBody"],"sourceRoot":""}