{"version":3,"file":"static/js/730.e1fc1539.chunk.js","mappings":"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","sources":["components/AddRecipeForm/AddRecipePage.styled.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","components/AddRecipeForm/TextError.jsx","components/AddRecipeForm/TextArea.jsx","components/AddRecipeForm/Select.jsx","components/AddRecipeForm/FormikControls.jsx","components/AddRecipeForm/PreviewImage.jsx","components/AddRecipeForm/AddRecipeForm.jsx","pages/AddRecipePage/AddRecipePage.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Field } from 'formik';\n\nexport const Error = styled.p`\n  color: red;\n`;\n\nexport const InputContainer = styled.div`\n  margin: 0 0 16px 0;\n`;\n\nexport const SelectIngredienContainer = styled.div`\n  display: grid;\n  grid-template-columns: 60% 30% 10%;\n  row-gap: 20px;\n  column-gap: 10px;\n`;\n\nexport const IngredienControler = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const IngredienLenght = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 5px;\n  max-width: 96px;\n  height: 28px;\n  border: 1px solid rgba(51, 51, 51, 0.3);\n  border-radius: 18px;\n`;\n\nexport const ButtonClickIngredient = styled.button`\n  border: none;\n  cursor: pointer;\n  color: #333333;\n  background-color: white;\n`;\n\nexport const Input = styled(Field)`\n  border: none;\n  outline: none;\n  border-bottom: 1px solid #e0e0e0;\n  width: 100%;\n  height: 48px;\n`;\n\nexport const SelectInput = styled(Field)`\n  border: none;\n  outline: none;\n  border-bottom: 1px solid #e0e0e0;\n  width: 100%;\n  height: 48px;\n`;\n\nexport const SelectInputIngredient = styled(Field)`\n  border: none;\n  outline: none;\n`;\n\nexport const ListStyle = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 1fr 1fr;\n  row-gap: 20px;\n  column-gap: 20px;\n`;\n","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","import { Error } from './AddRecipePage.styled';\n\nexport const TextError = props => {\n  return <Error>{props.children}</Error>;\n};\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { TextError } from './TextError';\n\nexport const TextArea = props => {\n  const { label, name, ...rest } = props;\n  return (\n    <div className=\"form-control\">\n      <label htmlFor={name}>{label}</label>\n      <Field\n        as=\"textarea\"\n        id={name}\n        name={name}\n        {...rest}\n        placeholder=\"Enter recipe\"\n      />\n      <ErrorMessage component={TextError} name={name} />\n    </div>\n  );\n};\n","import { ErrorMessage } from 'formik';\nimport { TextError } from './TextError';\nimport { SelectInput } from './AddRecipePage.styled';\n\nexport const Select = props => {\n  const { label, name, options, ...rest } = props;\n  return (\n    <div className=\"form-control\">\n      <SelectInput as=\"select\" id={name} name={name} {...rest}>\n        {options.map(option => {\n          return (\n            <option key={option.value} value={option.value}>\n              {option.key}\n            </option>\n          );\n        })}\n      </SelectInput>\n      <ErrorMessage component={TextError} name={name} />\n    </div>\n  );\n};\n","import { TextArea } from './TextArea';\nimport { Select } from './Select';\n\nfunction FormikControl(props) {\n  const { control, ...rest } = props;\n  switch (control) {\n    case 'textarea':\n      return <TextArea {...rest} />;\n    case 'select':\n      return <Select {...rest} />;\n    default:\n      return null;\n  }\n}\n\nexport default FormikControl;\n","import { useState } from 'react';\n\nexport const PreviewImage = ({ file }) => {\n  const [prew, setPrew] = useState(null);\n  const reader = new FileReader();\n\n  reader.readAsDataURL(file);\n\n  reader.onload = () => {\n    setPrew(reader.result);\n  };\n\n  return (\n    <div>\n      <img src={prew} alt=\"prew\" width=\"100%\" height=\"100%\" />\n    </div>\n  );\n};\n","import { Formik, Form, ErrorMessage, FieldArray, Field } from 'formik';\nimport { useRef } from 'react';\nimport * as Yup from 'yup';\nimport {\n  Input,\n  InputContainer,\n  SelectIngredienContainer,\n  IngredienControler,\n  IngredienLenght,\n  ButtonClickIngredient,\n} from './AddRecipePage.styled';\nimport FormikControl from './FormikControls';\nimport { PreviewImage } from './PreviewImage';\nimport { TextError } from './TextError';\n\nconst Schema = Yup.object({\n  item: Yup.string().required('Required'),\n  about: Yup.string().required('Required'),\n  selectCategory: Yup.mixed().required('Required'),\n  selectTime: Yup.mixed().required('Required'),\n  file: Yup.mixed().required('File is required'),\n});\n\nexport const AddRecipeForm = () => {\n  const fileRef = useRef(null);\n\n  const dropdownOptions = [\n    { key: 'Category', value: '' },\n    { key: 'Breakfast', value: 'breakfast' },\n    { key: 'Beef', value: 'beef' },\n    { key: 'Miscellaneous', value: 'miscellaneous' },\n    { key: 'Dessert', value: 'dessert' },\n    { key: 'Goat', value: 'goat' },\n    { key: 'Lamb', value: 'lamb' },\n  ];\n\n  const cookingTime = [\n    { key: 'Cooking time', value: '' },\n    { key: '20 min', value: '20 min' },\n    { key: '30 min', value: '30 min' },\n    { key: '40 min', value: '40 min' },\n    { key: '50 min', value: '50 min' },\n    { key: '60 min', value: '60 min' },\n    { key: '90 min', value: '90 min' },\n  ];\n\n  return (\n    <div>\n      <h1>Add recipe</h1>\n      <Formik\n        initialValues={{\n          item: '',\n          about: '',\n          selectCategory: '',\n          selectTime: '',\n          ingredients: [],\n          file: null,\n        }}\n        onSubmit={values => {\n          console.log(values);\n        }}\n        validationSchema={Schema}\n      >\n        {formik => {\n          return (\n            <Form>\n              <InputContainer>\n                <input\n                  type=\"file\"\n                  name=\"file\"\n                  hidden\n                  ref={fileRef}\n                  onChange={event => {\n                    formik.setFieldValue('file', event.target.files[0]);\n                  }}\n                />\n                {formik.values.file && (\n                  <PreviewImage file={formik.values.file} />\n                )}\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    fileRef.current.click();\n                  }}\n                >\n                  Upload\n                </button>\n                <ErrorMessage name=\"file\" component={TextError} />\n              </InputContainer>\n              <InputContainer>\n                <Input type=\"text\" name=\"item\" placeholder=\"Enter item title\" />\n                <ErrorMessage name=\"item\" component={TextError} />\n              </InputContainer>\n              <InputContainer>\n                <Input\n                  type=\"text\"\n                  name=\"about\"\n                  placeholder=\"Enter\n                  about\n                  recipe\"\n                />\n                <ErrorMessage name=\"about\" component={TextError} />\n              </InputContainer>\n              <InputContainer>\n                <FormikControl\n                  control=\"select\"\n                  name=\"selectCategory\"\n                  options={dropdownOptions}\n                />\n              </InputContainer>\n              <InputContainer>\n                <FormikControl\n                  control=\"select\"\n                  name=\"selectTime\"\n                  options={cookingTime}\n                />\n              </InputContainer>\n              {/* <div>\n                <button type=\"button\" onClick={removeSelect}>\n                  -\n                </button>\n                <span>{ingredients.length}</span>\n                <button type=\"button\" onClick={addSelect}>\n                  +\n                </button>\n              </div>\n              <div>\n                {ingredients.map(({ id, index }) => (\n                  <FormikControl\n                    key={id}\n                    control=\"select\"\n                    name={`ingredients[${id}]`}\n                    options={ingrediensArray}\n                  />\n                ))}\n              </div> */}\n              <div>\n                <FieldArray name=\"ingredients\">\n                  {fieldArrayProps => {\n                    const { push, remove, form } = fieldArrayProps;\n                    const { values } = form;\n                    const { ingredients } = values;\n                    console.log(ingredients);\n\n                    const addSelect = () => {\n                      push('');\n                    };\n\n                    const deleteSelect = () => {\n                      ingredients.pop();\n                    };\n\n                    return (\n                      <div>\n                        <IngredienControler>\n                          <h2>Ingredients</h2>\n                          <IngredienLenght>\n                            {ingredients.length > 0 && (\n                              <ButtonClickIngredient\n                                type=\"buttom\"\n                                onClick={deleteSelect}\n                              >\n                                -\n                              </ButtonClickIngredient>\n                            )}\n                            <span>{ingredients.length}</span>\n                            <ButtonClickIngredient\n                              type=\"buttom\"\n                              onClick={addSelect}\n                            >\n                              +\n                            </ButtonClickIngredient>\n                          </IngredienLenght>\n                        </IngredienControler>\n                        {ingredients.map((_, index) => (\n                          <SelectIngredienContainer key={index}>\n                            {/* <FormikControl\n                              control=\"select\"\n                              name=\"selectTime\"\n                              options={ingrediensArray}\n                            /> */}\n                            <Field\n                              type=\"text\"\n                              name={`ingredients[${index}].ingredient`}\n                            ></Field>\n                            <Field\n                              as=\"select\"\n                              name={`ingredients[${index}].weight`}\n                            >\n                              {cookingTime.map(option => {\n                                return (\n                                  <option\n                                    key={option.value}\n                                    value={option.value}\n                                  >\n                                    {option.key}\n                                  </option>\n                                );\n                              })}\n                            </Field>\n                            {index >= 0 && (\n                              <ButtonClickIngredient\n                                type=\"button\"\n                                onClick={() => remove(index)}\n                              >\n                                X\n                              </ButtonClickIngredient>\n                            )}\n                          </SelectIngredienContainer>\n                        ))}\n                      </div>\n                    );\n                  }}\n                </FieldArray>\n              </div>\n              <InputContainer>\n                <FormikControl\n                  control=\"textarea\"\n                  label=\"Recipe Preparation\"\n                  name=\"textarea\"\n                />\n              </InputContainer>\n              <button\n                type=\"submit\"\n                disabled={!(formik.dirty && formik.isValid)}\n              >\n                Submit\n              </button>\n            </Form>\n          );\n        }}\n      </Formik>\n    </div>\n  );\n};\n","import { Container } from 'components/MainContainer/MainContainer.styled';\n\nconst { AddRecipeForm } = require('components/AddRecipeForm/AddRecipeForm');\n\nconst AddRecipePage = () => {\n  return (\n    <Container>\n      <AddRecipeForm />;\n    </Container>\n  );\n};\n\nexport default AddRecipePage;\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}"],"names":["Error","styled","InputContainer","SelectIngredienContainer","IngredienControler","IngredienLenght","ButtonClickIngredient","Input","Field","SelectInput","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","defineProperty","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call","TextError","props","children","TextArea","label","name","rest","className","htmlFor","as","id","placeholder","component","Select","options","map","option","value","control","PreviewImage","file","useState","prew","setPrew","reader","FileReader","readAsDataURL","onload","result","src","alt","width","height","Schema","Yup","item","required","about","selectCategory","selectTime","AddRecipeForm","fileRef","useRef","dropdownOptions","cookingTime","initialValues","ingredients","onSubmit","values","console","log","validationSchema","formik","type","hidden","ref","onChange","event","setFieldValue","files","onClick","current","click","fieldArrayProps","remove","form","pop","_","index","disabled","dirty","isValid","require","_objectWithoutPropertiesLoose","sourceKeys"],"sourceRoot":""}