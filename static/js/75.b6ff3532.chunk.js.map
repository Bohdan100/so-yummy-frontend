{"version":3,"file":"static/js/75.b6ff3532.chunk.js","mappings":"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","sources":["components/ReusableComponents/ReusableTitle/ReusableTitle.styled.js","components/ReusableComponents/ReusableTitle/ReusableTitle.jsx","components/CategoriesByName/CategoriesList/CategoriesList.jsx","pages/CategoriesPage/CategoriesPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  margin-top: 50px;\n  font-style: normal;\n  font-weight: ${p => p.theme.fontWeights[2]};\n  font-size: 28px;\n  line-height: ${p => p.theme.lineHeights.subheader};\n  letter-spacing: ${p => p.theme.letterSpacings.content};\n  font-feature-settings: 'liga' off;\n  color: ${p => p.theme.colors.sectionHeader};\n\n  @media screen and (min-width: 768px) {\n    margin-top: 72px;\n    font-size: 32px;\n    line-height: ${p => p.theme.lineHeights.subheader};\n  }\n  @media screen and (min-width: 1440px) {\n    margin-top: 100px;\n    font-size: 44px;\n    line-height: ${p => p.theme.lineHeights.subheader};\n  }\n`;\n","import { Title } from './ReusableTitle.styled';\n\nconst ReusableTitle = ({ children }) => {\n  return <Title>{children}</Title>;\n};\n\nexport default ReusableTitle;\n","import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport { toast } from 'react-toastify';\nimport * as API from '../../../services/categories-API';\nimport NotFoundWrapp from '../NotFoundWrapp/';\nimport Loader from 'components/Loader/Loader';\n\nconst CategoriesList = () => {\n  const [tabValue, setTabValue] = useState(0);\n  const [categories, setCategories] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    async function getAllCategories() {\n      try {\n        setIsLoading(true);\n        const { categoriesList } = await API.fetchAllCategories();\n        setCategories(categoriesList);\n      } catch (error) {\n        setError({ error });\n        toast.error(`Something went wrong. Plese try again...`);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getAllCategories();\n  }, []);\n\n  useEffect(() => {\n    if (categories.length > 0) {\n      const lowerCaseCategory = categories[tabValue].toLowerCase();\n      navigate(`/categories/${lowerCaseCategory}`);\n    }\n  }, [categories, navigate, tabValue]);\n\n  const handleChange = (e, newCategory) => {\n    navigate(`/categories/${e.target.textContent}`);\n    setTabValue(newCategory);\n  };\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {categories && (\n        <div>\n          <Tabs\n            value={tabValue}\n            onChange={handleChange}\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n            aria-label=\"scrollable auto tabs example\"\n            sx={{\n              marginTop: '50px',\n\n              '@media (min-width: 768px)': {\n                marginTop: '72px',\n              },\n              '@media (min-width: 1440px)': {\n                marginTop: '100px',\n              },\n\n              '& .MuiTabs-scroller': {\n                '& .css-1aquho2-MuiTabs-indicator': {\n                  backgroundColor: '#8BAA36',\n                },\n                '& .css-ttwr4n': { backgroundColor: '#8BAA36' },\n                transition: 'all 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n                overflowX: 'auto',\n                scrollbarWidth: 'none',\n                '&::-webkit-scrollbar': {\n                  display: 'none',\n                },\n              },\n              '& .MuiTabs-flexContainer': {\n                transition: 'all 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n                gap: '28px',\n                '@media (min-width: 768px)': {\n                  gap: '55px',\n                },\n                '& :hover': {\n                  color: '#8BAA36',\n                },\n              },\n\n              '& .MuiTab-root': {\n                textTransform: 'capitalize',\n                minWidth: 'unset',\n                fontSize: '18px',\n                fontFamily: 'Poppins',\n                fontWeight: '400',\n                lineHeight: '18px',\n                borderColor: '#8BAA36',\n                transition: 'all 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n              },\n\n              '& svg': {\n                opacity: 0.8,\n                stroke: '#8BAA36',\n                strokeWidth: '3px',\n                transition: 'all 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n              },\n            }}\n          >\n            {categories.map((category, idx) => {\n              return (\n                <Tab\n                  label={category.toLowerCase()}\n                  key={idx}\n                  sx={{\n                    padding: '0',\n                    color: '#BDBDBD',\n                    '&.Mui-selected': {\n                      color: '#8BAA36',\n                    },\n                  }}\n                />\n              );\n            })}\n          </Tabs>\n        </div>\n      )}\n      {error && (\n        <NotFoundWrapp>\n          Whoops, something went wrong: {error.message}\n        </NotFoundWrapp>\n      )}\n    </>\n  );\n};\n\nexport default CategoriesList;\n","import { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport MainContainer from '../../components/MainContainer';\nimport CategoriesList from 'components/CategoriesByName/CategoriesList/CategoriesList';\nimport ReusableTitle from 'components/ReusableComponents/ReusableTitle/ReusableTitle';\nimport Loader from 'components/Loader/Loader';\n\nconst CategoriesPage = () => {\n  return (\n    <div>\n      <MainContainer>\n        <ReusableTitle>Categories</ReusableTitle>\n        <CategoriesList />\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </MainContainer>\n    </div>\n  );\n};\n\nexport default CategoriesPage;\n"],"names":["Title","styled","p","theme","fontWeights","lineHeights","subheader","letterSpacings","content","colors","sectionHeader","children","useState","tabValue","setTabValue","categories","setCategories","error","setError","isLoading","setIsLoading","navigate","useNavigate","useEffect","API","categoriesList","toast","getAllCategories","length","lowerCaseCategory","toLowerCase","Loader","Tabs","value","onChange","e","newCategory","target","textContent","variant","scrollButtons","sx","marginTop","backgroundColor","transition","overflowX","scrollbarWidth","display","gap","color","textTransform","minWidth","fontSize","fontFamily","fontWeight","lineHeight","borderColor","opacity","stroke","strokeWidth","map","category","idx","Tab","label","padding","NotFoundWrapp","message","MainContainer","ReusableTitle","Suspense","fallback"],"sourceRoot":""}