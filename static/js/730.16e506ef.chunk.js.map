{"version":3,"file":"static/js/730.16e506ef.chunk.js","mappings":"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","sources":["components/AddRecipeForm/AddRecipePage.styled.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","components/AddRecipeForm/TextError.jsx","components/AddRecipeForm/TextArea.jsx","components/AddRecipeForm/Select.jsx","components/AddRecipeForm/FormikControls.jsx","components/AddRecipeForm/PreviewImage.jsx","components/AddRecipeForm/AddRecipeForm.jsx","pages/AddRecipePage/AddRecipePage.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Field } from 'formik';\n\nexport const Error = styled.p`\n  color: red;\n`;\n\nexport const InputContainer = styled.div`\n  margin: 16px 0;\n`;\n\nexport const SelectIngredienContainer = styled.div`\n  display: grid;\n  grid-template-columns: 60% 30% 10%;\n  row-gap: 20px;\n  column-gap: 10px;\n`;\n\nexport const IngredienControler = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const IngredienLenght = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 5px;\n  max-width: 96px;\n  height: 28px;\n  border: 1px solid rgba(51, 51, 51, 0.3);\n  border-radius: 18px;\n`;\n\nexport const ButtonClickIngredient = styled.button`\n  border: none;\n  cursor: pointer;\n  color: #333333;\n  background-color: white;\n`;\n\nexport const Input = styled(Field)`\n  border: none;\n  outline: none;\n  border-bottom: 1px solid #e0e0e0;\n  width: 100%;\n  height: 48px;\n`;\n\nexport const SelectInput = styled(Field)`\n  border: none;\n  outline: none;\n  border-bottom: 1px solid #e0e0e0;\n  width: 100%;\n  height: 48px;\n`;\n\nexport const SelectInputIngredient = styled(Field)`\n  border: none;\n  outline: none;\n`;\n\nexport const ListStyle = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 1fr 1fr;\n  row-gap: 20px;\n  column-gap: 20px;\n`;\n\nexport const TextAreaContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 44px 0 16px 0;\n`;\n\nexport const Area = styled(Field)`\n  padding: 16px 22px;\n  width: 505px;\n  height: 224px;\n  background: #d9d9d9;\n  border-radius: 6px;\n  resize: none;\n  outline: none;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 24px;\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 24px;\n  /* identical to box height, or 100% */\n\n  letter-spacing: -0.02em;\n  font-feature-settings: 'liga' off;\n\n  color: #3e4462;\n`;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","import { Error } from './AddRecipePage.styled';\n\nexport const TextError = props => {\n  return <Error>{props.children}</Error>;\n};\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport { TextError } from './TextError';\nimport { TextAreaContainer } from './AddRecipePage.styled';\n\nexport const TextArea = props => {\n  const { label, name, ...rest } = props;\n  return (\n    <TextAreaContainer>\n      <label htmlFor={name}>{label}</label>\n      <Field\n        as=\"textarea\"\n        id={name}\n        name={name}\n        {...rest}\n        placeholder=\"Enter recipe\"\n      />\n      <ErrorMessage component={TextError} name={name} />\n    </TextAreaContainer>\n  );\n};\n","import { ErrorMessage } from 'formik';\nimport { TextError } from './TextError';\nimport { SelectInput } from './AddRecipePage.styled';\n\nexport const Select = props => {\n  const { label, name, options, ...rest } = props;\n  return (\n    <div className=\"form-control\">\n      <SelectInput as=\"select\" id={name} name={name} {...rest}>\n        {options.map(option => {\n          return (\n            <option key={option.value} value={option.value}>\n              {option.key}\n            </option>\n          );\n        })}\n      </SelectInput>\n      <ErrorMessage component={TextError} name={name} />\n    </div>\n  );\n};\n","import { TextArea } from './TextArea';\nimport { Select } from './Select';\n\nfunction FormikControl(props) {\n  const { control, ...rest } = props;\n  switch (control) {\n    case 'textarea':\n      return <TextArea {...rest} />;\n    case 'select':\n      return <Select {...rest} />;\n    default:\n      return null;\n  }\n}\n\nexport default FormikControl;\n","import { useState } from 'react';\n\nexport const PreviewImage = ({ file }) => {\n  const [prew, setPrew] = useState(null);\n  const reader = new FileReader();\n\n  reader.readAsDataURL(file);\n\n  reader.onload = () => {\n    setPrew(reader.result);\n  };\n\n  return (\n    <div>\n      <img src={prew} alt=\"prew\" width=\"100%\" height=\"100%\" />\n    </div>\n  );\n};\n","import { Formik, Form, ErrorMessage, FieldArray, Field } from 'formik';\nimport { useRef } from 'react';\nimport * as Yup from 'yup';\nimport {\n  Input,\n  InputContainer,\n  SelectIngredienContainer,\n  IngredienControler,\n  IngredienLenght,\n  ButtonClickIngredient,\n  TextAreaContainer,\n  Area,\n  Title,\n} from './AddRecipePage.styled';\nimport FormikControl from './FormikControls';\nimport { PreviewImage } from './PreviewImage';\nimport { TextError } from './TextError';\n\nconst Schema = Yup.object({\n  item: Yup.string().required('Required'),\n  about: Yup.string().required('Required'),\n  selectCategory: Yup.string().required('Required'),\n  selectTime: Yup.string().required('Required'),\n  file: Yup.mixed().required('File is required'),\n  textarea: Yup.string().required('Required'),\n});\n\nexport const AddRecipeForm = () => {\n  const fileRef = useRef(null);\n\n  const dropdownOptions = [\n    { key: 'Category', value: '' },\n    { key: 'Breakfast', value: 'breakfast' },\n    { key: 'Beef', value: 'beef' },\n    { key: 'Miscellaneous', value: 'miscellaneous' },\n    { key: 'Dessert', value: 'dessert' },\n    { key: 'Goat', value: 'goat' },\n    { key: 'Lamb', value: 'lamb' },\n  ];\n\n  const cookingTime = [\n    { key: 'Cooking time', value: '' },\n    { key: '20 min', value: '20 min' },\n    { key: '30 min', value: '30 min' },\n    { key: '40 min', value: '40 min' },\n    { key: '50 min', value: '50 min' },\n    { key: '60 min', value: '60 min' },\n    { key: '90 min', value: '90 min' },\n  ];\n\n  return (\n    <div>\n      <h1>Add recipe</h1>\n      <Formik\n        initialValues={{\n          item: '',\n          about: '',\n          selectCategory: '',\n          selectTime: '',\n          ingredients: [],\n          file: null,\n        }}\n        onSubmit={values => {\n          console.log(values);\n        }}\n        validationSchema={Schema}\n      >\n        {formik => {\n          return (\n            <Form>\n              <InputContainer>\n                <input\n                  type=\"file\"\n                  name=\"file\"\n                  hidden\n                  ref={fileRef}\n                  onChange={event => {\n                    formik.setFieldValue('file', event.target.files[0]);\n                  }}\n                />\n                {formik.values.file && (\n                  <PreviewImage file={formik.values.file} />\n                )}\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    fileRef.current.click();\n                  }}\n                >\n                  Upload\n                </button>\n                <ErrorMessage name=\"file\" component={TextError} />\n              </InputContainer>\n              <InputContainer>\n                <Input type=\"text\" name=\"item\" placeholder=\"Enter item title\" />\n                <ErrorMessage name=\"item\" component={TextError} />\n              </InputContainer>\n              <InputContainer>\n                <Input\n                  type=\"text\"\n                  name=\"about\"\n                  placeholder=\"Enter\n                  about\n                  recipe\"\n                />\n                <ErrorMessage name=\"about\" component={TextError} />\n              </InputContainer>\n              <InputContainer>\n                <FormikControl\n                  control=\"select\"\n                  name=\"selectCategory\"\n                  options={dropdownOptions}\n                />\n              </InputContainer>\n              <InputContainer>\n                <FormikControl\n                  control=\"select\"\n                  name=\"selectTime\"\n                  options={cookingTime}\n                />\n              </InputContainer>\n              <div>\n                <FieldArray name=\"ingredients\">\n                  {fieldArrayProps => {\n                    const { push, remove, form } = fieldArrayProps;\n                    const { values } = form;\n                    const { ingredients } = values;\n                    console.log(ingredients);\n\n                    const addSelect = () => {\n                      push('');\n                    };\n\n                    const deleteSelect = () => {\n                      ingredients.pop();\n                    };\n\n                    return (\n                      <InputContainer>\n                        <IngredienControler>\n                          <Title>Ingredients</Title>\n                          <IngredienLenght>\n                            {ingredients.length > 0 && (\n                              <ButtonClickIngredient\n                                type=\"buttom\"\n                                onClick={deleteSelect}\n                              >\n                                -\n                              </ButtonClickIngredient>\n                            )}\n                            <span>{ingredients.length}</span>\n                            <ButtonClickIngredient\n                              type=\"buttom\"\n                              onClick={addSelect}\n                            >\n                              +\n                            </ButtonClickIngredient>\n                          </IngredienLenght>\n                        </IngredienControler>\n                        {ingredients.map((_, index) => (\n                          <SelectIngredienContainer key={index}>\n                            <Field\n                              as=\"select\"\n                              name={`ingredients[${index}].ingredient`}\n                            >\n                              {cookingTime.map(option => {\n                                return (\n                                  <option\n                                    key={option.value}\n                                    value={option.value}\n                                  >\n                                    {option.key}\n                                  </option>\n                                );\n                              })}\n                            </Field>\n                            <Field\n                              as=\"select\"\n                              name={`ingredients[${index}].weight`}\n                            >\n                              {cookingTime.map(option => {\n                                return (\n                                  <option\n                                    key={option.value}\n                                    value={option.value}\n                                  >\n                                    {option.key}\n                                  </option>\n                                );\n                              })}\n                            </Field>\n                            {index >= 0 && (\n                              <ButtonClickIngredient\n                                type=\"button\"\n                                onClick={() => remove(index)}\n                              >\n                                X\n                              </ButtonClickIngredient>\n                            )}\n                          </SelectIngredienContainer>\n                        ))}\n                      </InputContainer>\n                    );\n                  }}\n                </FieldArray>\n              </div>\n              <TextAreaContainer>\n                <Title>Recipe Preparation</Title>\n                <Area\n                  as=\"textarea\"\n                  name=\"textarea\"\n                  placeholder=\"Enter recipe\"\n                />\n                <ErrorMessage name=\"textarea\" component={TextError} />\n              </TextAreaContainer>\n\n              <button\n                type=\"submit\"\n                disabled={!(formik.dirty && formik.isValid)}\n              >\n                Submit\n              </button>\n            </Form>\n          );\n        }}\n      </Formik>\n    </div>\n  );\n};\n","import { Container } from 'components/MainContainer/MainContainer.styled';\n\nconst { AddRecipeForm } = require('components/AddRecipeForm/AddRecipeForm');\n\nconst AddRecipePage = () => {\n  return (\n    <Container>\n      <AddRecipeForm />\n    </Container>\n  );\n};\n\nexport default AddRecipePage;\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}"],"names":["Error","styled","InputContainer","SelectIngredienContainer","IngredienControler","IngredienLenght","ButtonClickIngredient","Input","Field","SelectInput","TextAreaContainer","Area","Title","_objectWithoutProperties","source","excluded","key","i","target","objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","TextError","props","children","TextArea","label","name","rest","htmlFor","as","id","placeholder","component","Select","options","className","map","option","value","control","PreviewImage","file","useState","prew","setPrew","reader","FileReader","readAsDataURL","onload","result","src","alt","width","height","Schema","Yup","item","required","about","selectCategory","selectTime","textarea","AddRecipeForm","fileRef","useRef","dropdownOptions","cookingTime","initialValues","ingredients","onSubmit","values","console","log","validationSchema","formik","type","hidden","ref","onChange","event","setFieldValue","files","onClick","current","click","fieldArrayProps","push","remove","form","pop","_","index","disabled","dirty","isValid","require","_objectWithoutPropertiesLoose","sourceKeys","keys"],"sourceRoot":""}