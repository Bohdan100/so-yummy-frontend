{"version":3,"file":"static/js/942.15ed0a72.chunk.js","mappings":"+TA6IA,EAjIuB,WACrB,IAAsBA,GAAaC,EAAAA,EAAAA,MAA3BC,aACR,GAAgCC,EAAAA,EAAAA,UAAS,GAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAkCN,EAAAA,EAAAA,WAAS,GAA3C,eAAOO,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MACTC,GAAMC,EAAAA,EAAAA,MAAND,GAERE,EAAAA,EAAAA,YAAU,WAAM,wCACd,0GAEIL,GAAa,GAFjB,SAGqCM,EAAAA,KAHrC,gBAGYC,EAHZ,EAGYA,eACRX,EAAcW,GACVlB,IACImB,EACJnB,EAAS,GAAGoB,cAAgBpB,EAASqB,MAAM,IACvCC,EAAkBJ,EAAeK,QAAQJ,IACzB,GAAGd,EAAYiB,IAT3C,kDAYIb,EAAS,CAAED,MAAK,OAChBgB,EAAAA,GAAAA,MAAYV,EAAE,yBAblB,yBAeIH,GAAa,GAfjB,8EADc,uBAAC,WAAD,wBAmBdc,EACD,GAAE,CAACzB,EAAUc,KAEdE,EAAAA,EAAAA,YAAU,WACR,GAAIV,EAAWoB,OAAS,EAAG,CACzB,IAAMC,EAAoBrB,EAAWF,GAAUwB,cAC/ChB,EAAS,eAAD,OAAgBe,GACzB,CACF,GAAE,CAACrB,EAAYM,EAAUR,IAO1B,OACE,gCACGM,IAAa,SAACmB,EAAA,EAAD,IACbvB,IACC,0BACE,SAACwB,EAAA,EAAD,CACEC,MAAO3B,EACP4B,SAZW,SAACC,EAAGC,GACvBtB,EAAS,eAAD,OAAgBqB,EAAEE,OAAOC,cACjC/B,EAAY6B,EACb,EAUSG,QAAQ,aACRC,cAAc,OACd,aAAW,+BACXC,GAAI,CACFC,UAAW,OAEX,4BAA6B,CAC3BA,UAAW,QAEb,6BAA8B,CAC5BA,UAAW,SAGb,sBAAuB,CACrB,mCAAoC,CAClCC,gBAAiB,WAEnB,gBAAiB,CAAEA,gBAAiB,WACpCC,WAAY,yCACZC,UAAW,OACXC,eAAgB,OAChB,uBAAwB,CACtBC,QAAS,SAGb,2BAA4B,CAC1BH,WAAY,yCACZI,IAAK,OACL,4BAA6B,CAC3BA,IAAK,QAEP,WAAY,CACVC,MAAO,YAIX,iBAAkB,CAChBC,cAAe,aACfC,SAAU,QACVC,SAAU,OACVC,WAAY,UACZC,WAAY,MACZC,WAAY,OACZC,YAAa,UACbZ,WAAY,0CAGd,QAAS,CACPa,QAAS,GACTC,OAAQ,UACRC,YAAa,MACbf,WAAY,2CAtDlB,SA0DGpC,EAAWoD,KAAI,SAAC1D,EAAU2D,GACzB,OACE,SAACC,EAAA,EAAD,CACEC,MAAO7D,EAAS4B,cAEhBW,GAAI,CACFuB,QAAS,IACTf,MAAO,UACP,iBAAkB,CAChBA,MAAO,aALNY,EAUV,QAINnD,IAAS,SAACuD,EAAA,EAAD,UAAgBjD,EAAE,gCAGjC,E,oBC/GD,EAlBuB,WACrB,IAAQA,GAAMC,EAAAA,EAAAA,MAAND,EAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRgD,EAAAA,EAAAA,IACD,GAAE,KAGD,UAACC,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,UAAgBpD,EAAE,2BAClB,SAAC,EAAD,KACA,SAAC,EAAAqD,SAAD,CAAUC,UAAU,SAACvC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/CategoriesByName/CategoriesList/CategoriesList.jsx","pages/CategoriesPage/CategoriesPage.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router';\nimport { useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport { toast } from 'react-toastify';\nimport * as API from 'services/categories-API';\nimport NotFoundWrapp from 'components/ReusableComponents/NotFoundWrapp';\nimport Loader from 'components/Loader/Loader';\n\nconst CategoriesList = () => {\n  const { categoryName: category } = useParams();\n  const [tabValue, setTabValue] = useState(0);\n  const [categories, setCategories] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    async function getAllCategories() {\n      try {\n        setIsLoading(true);\n        const { categoriesList } = await API.fetchAllCategories();\n        setCategories(categoriesList);\n        if (category) {\n          const categoryCapitalize =\n            category[0].toUpperCase() + category.slice(1);\n          const indexOfCategory = categoriesList.indexOf(categoryCapitalize);\n          if (indexOfCategory > 0) setTabValue(indexOfCategory);\n        }\n      } catch (error) {\n        setError({ error });\n        toast.error(t('categoriesList.error'));\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getAllCategories();\n  }, [category, t]);\n\n  useEffect(() => {\n    if (categories.length > 0) {\n      const lowerCaseCategory = categories[tabValue].toLowerCase();\n      navigate(`/categories/${lowerCaseCategory}`);\n    }\n  }, [categories, navigate, tabValue]);\n\n  const handleChange = (e, newCategory) => {\n    navigate(`/categories/${e.target.textContent}`);\n    setTabValue(newCategory);\n  };\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {categories && (\n        <div>\n          <Tabs\n            value={tabValue}\n            onChange={handleChange}\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n            aria-label=\"scrollable auto tabs example\"\n            sx={{\n              marginTop: '50px',\n\n              '@media (min-width: 768px)': {\n                marginTop: '72px',\n              },\n              '@media (min-width: 1440px)': {\n                marginTop: '100px',\n              },\n\n              '& .MuiTabs-scroller': {\n                '& .css-1aquho2-MuiTabs-indicator': {\n                  backgroundColor: '#8BAA36',\n                },\n                '& .css-ttwr4n': { backgroundColor: '#8BAA36' },\n                transition: 'all 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n                overflowX: 'auto',\n                scrollbarWidth: 'none',\n                '&::-webkit-scrollbar': {\n                  display: 'none',\n                },\n              },\n              '& .MuiTabs-flexContainer': {\n                transition: 'all 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n                gap: '28px',\n                '@media (min-width: 768px)': {\n                  gap: '55px',\n                },\n                '& :hover': {\n                  color: '#8BAA36',\n                },\n              },\n\n              '& .MuiTab-root': {\n                textTransform: 'capitalize',\n                minWidth: 'unset',\n                fontSize: '18px',\n                fontFamily: 'Poppins',\n                fontWeight: '400',\n                lineHeight: '18px',\n                borderColor: '#8BAA36',\n                transition: 'all 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n              },\n\n              '& svg': {\n                opacity: 0.8,\n                stroke: '#8BAA36',\n                strokeWidth: '3px',\n                transition: 'all 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n              },\n            }}\n          >\n            {categories.map((category, idx) => {\n              return (\n                <Tab\n                  label={category.toLowerCase()}\n                  key={idx}\n                  sx={{\n                    padding: '0',\n                    color: '#BDBDBD',\n                    '&.Mui-selected': {\n                      color: '#8BAA36',\n                    },\n                  }}\n                />\n              );\n            })}\n          </Tabs>\n        </div>\n      )}\n      {error && <NotFoundWrapp>{t('categoriesList.errorText')}</NotFoundWrapp>}\n    </>\n  );\n};\n\nexport default CategoriesList;\n","import { useEffect } from 'react';\nimport { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport MainContainer from '../../components/MainContainer';\nimport CategoriesList from 'components/CategoriesByName/CategoriesList/CategoriesList';\nimport ReusableTitle from 'components/ReusableComponents/ReusableTitle/ReusableTitle';\nimport Loader from 'components/Loader/Loader';\nimport { scrollToTop } from 'helpers/scrollToTop';\n\nconst CategoriesPage = () => {\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    scrollToTop();\n  }, []);\n\n  return (\n    <MainContainer>\n      <ReusableTitle>{t('categoriesPage.title')}</ReusableTitle>\n      <CategoriesList />\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </MainContainer>\n  );\n};\n\nexport default CategoriesPage;\n"],"names":["category","useParams","categoryName","useState","tabValue","setTabValue","categories","setCategories","error","setError","isLoading","setIsLoading","navigate","useNavigate","t","useTranslation","useEffect","API","categoriesList","categoryCapitalize","toUpperCase","slice","indexOfCategory","indexOf","toast","getAllCategories","length","lowerCaseCategory","toLowerCase","Loader","Tabs","value","onChange","e","newCategory","target","textContent","variant","scrollButtons","sx","marginTop","backgroundColor","transition","overflowX","scrollbarWidth","display","gap","color","textTransform","minWidth","fontSize","fontFamily","fontWeight","lineHeight","borderColor","opacity","stroke","strokeWidth","map","idx","Tab","label","padding","NotFoundWrapp","scrollToTop","MainContainer","ReusableTitle","Suspense","fallback"],"sourceRoot":""}