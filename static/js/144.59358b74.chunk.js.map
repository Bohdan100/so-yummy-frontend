{"version":3,"file":"static/js/144.59358b74.chunk.js","mappings":"yWAKaA,EAAYC,EAAAA,GAAAA,IAAH,0aACP,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAxB,IASkB,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAxB,IAClB,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAxB,IAKgB,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAxB,IAClB,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAxB,IAQLC,GAAaJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,4UAMD,SAAAC,GAAC,OAAIA,EAAEC,MAAMI,OAAOC,SAAnB,IACJ,SAAAN,GAAC,OAAIA,EAAEC,MAAMM,MAAMC,IAAlB,IAEJ,SAAAR,GAAC,OAAIA,EAAEC,MAAMQ,YAAYC,IAAxB,IACiB,SAAAV,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAxB,IAMtBS,EAAiBZ,EAAAA,GAAAA,IAAH,mHAOda,EAAQb,EAAAA,GAAAA,GAAH,8VAED,SAAAC,GAAC,OAAIA,EAAEC,MAAMY,MAAMH,IAAlB,IAED,SAAAV,GAAC,OAAIA,EAAEC,MAAMa,YAAY,EAAxB,IAED,SAAAd,GAAC,OAAIA,EAAEC,MAAMc,YAAYC,QAAxB,IACE,SAAAhB,GAAC,OAAIA,EAAEC,MAAMgB,eAAeC,OAA3B,IAGV,SAAAlB,GAAC,OAAIA,EAAEC,MAAMI,OAAOc,YAAnB,IACsB,SAAAnB,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAxB,IAMtBkB,EAAiBrB,EAAAA,GAAAA,IAAH,iLAMO,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAxB,IAKtBmB,EAAQtB,EAAAA,GAAAA,MAAH,6GAQLuB,GAAQvB,EAAAA,EAAAA,IAAOwB,EAAAA,GAAPxB,CAAH,woBAKD,SAAAC,GAAC,OAAIA,EAAEC,MAAMa,YAAY,EAAxB,IACD,SAAAd,GAAC,OAAIA,EAAEC,MAAMc,YAAYS,YAAxB,IACE,SAAAxB,GAAC,OAAIA,EAAEC,MAAMgB,eAAeC,OAA3B,IAGV,SAAAlB,GAAC,OAAIA,EAAEC,MAAMI,OAAOoB,OAAnB,IAGO,SAAAzB,GAAC,OAAIA,EAAEC,MAAMM,MAAMmB,WAAlB,IACR,SAAA1B,GAAC,OAAIA,EAAEC,MAAM0B,QAAQC,aAApB,IACG,SAAA5B,GAAC,OAAIA,EAAEC,MAAMQ,YAAYC,IAAxB,IAEb,SAAAV,GAAC,MAAgB,WAAZA,EAAE6B,OAAF,yBAAJ,IACD,SAAA7B,GAAC,MAAgB,YAAZA,EAAE6B,OAAF,uBAAJ,IACD,SAAA7B,GAAC,MAAgB,cAAZA,EAAE6B,OAAF,uBAAJ,IACD,SAAA7B,GAAC,MAAgB,UAAZA,EAAE6B,OAAF,uBAAJ,IAE6B,SAAA7B,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAxB,IAMf,SAAAF,GAAC,OAAIA,EAAEC,MAAMI,OAAOoB,OAAnB,IACR,SAAAzB,GAAC,OAAIA,EAAEC,MAAMI,OAAOoB,OAAnB,IAQDK,EAAS/B,EAAAA,GAAAA,OAAH,+lBAMF,SAAAC,GAAC,OAAIA,EAAEC,MAAMY,MAAMH,IAAlB,IAID,SAAAV,GAAC,OAAIA,EAAEC,MAAMa,YAAY,EAAxB,IACD,SAAAd,GAAC,OAAIA,EAAEC,MAAMc,YAAYgB,OAAxB,IACP,SAAA/B,GAAC,OAAIA,EAAEC,MAAMI,OAAOc,YAAnB,IACU,SAAAnB,GAAC,OAAIA,EAAEC,MAAMI,OAAO2B,UAAnB,IACJ,SAAAhC,GAAC,OAAIA,EAAEC,MAAMM,MAAMmB,WAAlB,IAIJ,SAAA1B,GAAC,OAAIA,EAAEC,MAAMQ,YAAYC,IAAxB,IACiB,SAAAV,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAxB,IAKtB,SAAAF,GAAC,OAAIA,EAAEC,MAAMI,OAAO4B,UAAnB,IAQDC,GAAanC,EAAAA,EAAAA,IAAOoC,EAAAA,GAAPpC,CAAH,gbAMN,SAAAC,GAAC,OAAIA,EAAEC,MAAMa,YAAY,EAAxB,IACD,SAAAd,GAAC,OAAIA,EAAEC,MAAMc,YAAYS,YAAxB,IACP,SAAAxB,GAAC,OAAIA,EAAEC,MAAMI,OAAOoB,OAAnB,IAEI,SAAAzB,GAAC,OAAIA,EAAEC,MAAMQ,YAAYC,IAAxB,IACiB,SAAAV,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAxB,IAWtBkC,EAAYrC,EAAAA,GAAAA,IAAH,oOAGL,SAAAC,GAAC,OAAIA,EAAEC,MAAMa,YAAY,EAAxB,IACD,SAAAd,GAAC,OAAIA,EAAEC,MAAMc,YAAYS,YAAxB,IACF,SAAAxB,GAAC,OAAIA,EAAEC,MAAMQ,YAAYC,IAAxB,IAEb,SAAAV,GAAC,MAAgB,cAAZA,EAAE6B,OAAF,gBAAJ,IACD,SAAA7B,GAAC,MAAgB,UAAZA,EAAE6B,OAAF,gBAAJ,IAC6B,SAAA7B,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAxB,IAKtBmC,EAAWtC,EAAAA,GAAAA,IAAH,4VAQJ,SAAAC,GAAC,OAAIA,EAAEC,MAAMa,YAAY,EAAxB,IACD,SAAAd,GAAC,OAAIA,EAAEC,MAAMc,YAAYS,YAAxB,IACF,SAAAxB,GAAC,OAAIA,EAAEC,MAAMQ,YAAYC,IAAxB,IAEiB,SAAAV,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAxB,IAMtBoC,EAAcvC,EAAAA,GAAAA,IAAH,4SASR,SAAAC,GAAC,OAAIA,EAAEC,MAAMQ,YAAYC,IAAxB,IACiB,SAAAV,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAxB,IAOtBqC,EAAkBxC,EAAAA,GAAAA,OAAH,8bAaZ,SAAAC,GAAC,OAAIA,EAAEC,MAAMQ,YAAYC,IAAxB,IAKiB,SAAAV,GAAC,OAAIA,EAAEC,MAAMC,YAAY,EAAxB,IAOtBsC,GAAazC,EAAAA,EAAAA,IAAOoC,EAAAA,GAAPpC,CAAH,+CAIV0C,GAAa1C,EAAAA,EAAAA,IAAO2C,EAAAA,EAAP3C,CAAH,0R,UCrEvB,EArJqB,WACnB,OAA4C4C,EAAAA,EAAAA,WAAS,GAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACMC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAWC,EAAAA,EAAAA,MACTC,GAAUC,EAAAA,EAAAA,KAAVD,MACR,GAA4CE,EAAAA,EAAAA,MAApCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,mBACbC,GAA6BC,EAAAA,EAAAA,MAA7BD,yBACAE,GAAMC,EAAAA,EAAAA,MAAND,GAERE,EAAAA,EAAAA,YAAU,WACM,OAAVT,GACFU,YAAW,WACTZ,GAASa,EAAAA,EAAAA,IAAS,MACnB,GAAE,IAEN,GAAE,CAACb,EAAUE,IAEd,IAMMY,EAAa,CACjBC,OAAO,SAAC,KAAD,IACPC,SAAS,SAAC,KAAD,IACTC,WAAW,SAAC,KAAD,KAGPC,EAAiB,CACrBH,OAAO,SAAC,KAAD,IACPC,SAAS,SAAC,KAAD,IACTC,WAAW,SAAC,KAAD,KAGb,OACE,SAACpE,EAAD,WACE,SAAC,KAAD,CACEsE,cAAe,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,IAChDC,SAtBmB,SAAC,EAAD,GAA+C,IAA5CH,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAAcE,EAAgB,EAAhBA,UACrDxB,GAASyB,EAAAA,EAAAA,IAAS,CAAEL,KAAAA,EAAMC,MAAAA,EAAOC,SAAAA,KAAaI,MAC5C,SAAAC,GAAG,OAAKA,EAAIzB,OAASsB,GAAlB,GAEN,EAmBKI,iBAAkBrB,EAClBsB,gBAAc,EAJhB,SAMG,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,QAASC,EAA7B,EAA6BA,MAA7B,OACC,UAAC/E,EAAD,YACE,UAACQ,EAAD,YACE,SAACC,EAAD,UAAQ8C,EAAE,yBACTP,IAAS,SAACd,EAAD,UAAWiB,EAAYH,SAEnC,UAAC/B,EAAD,YACE,UAACC,EAAD,CAAO8D,QAAQ,OAAf,WACE,SAAC7D,EAAD,CACE8D,KAAK,OACLf,KAAK,OACLgB,YAAa3B,EAAE,kBACf4B,SAAUxC,EACVjB,MAAOmD,EAAQX,MAAQd,EAAmBwB,EAAOV,KAAMa,MAEzD,SAAC,KAAD,CACErD,MAAOmD,EAAQX,MAAQd,EAAmBwB,EAAOV,KAAMa,KAExDF,EAAQX,MACPN,EAAWR,EAAmBwB,EAAOV,KAAMa,IAC5CH,EAAOV,MAAQW,EAAQX,MACtB,SAACjC,EAAD,UAAY2C,EAAOV,OACjB,SAEN,UAAChD,EAAD,CAAO8D,QAAQ,QAAf,WACE,SAAC7D,EAAD,CACE8D,KAAK,QACLf,KAAK,QACLgB,YAAa3B,EAAE,mBACf4B,SAAUxC,EACVjB,MACEmD,EAAQV,OAASf,EAAmBwB,EAAOT,MAAOY,MAGtD,SAAC,KAAD,CACErD,MACEmD,EAAQV,OAASf,EAAmBwB,EAAOT,MAAOY,KAGrDF,EAAQV,OACPP,EAAWR,EAAmBwB,EAAOT,MAAOY,IAC7CH,EAAOT,OAASU,EAAQV,OACvB,SAAClC,EAAD,UAAY2C,EAAOT,QACjB,SAEN,UAACjD,EAAD,CAAO8D,QAAQ,WAAf,WACE,SAAC7D,EAAD,CACE8D,KAAMxC,EAAiB,OAAS,WAChCyB,KAAK,WACLgB,YAAa3B,EAAE,sBACf4B,SAAUxC,EACVjB,MACEmD,EAAQT,UACRhB,EAAmBwB,EAAOR,SAAUW,MAGxC,SAAC,KAAD,CACErD,MACEmD,EAAQT,UACRhB,EAAmBwB,EAAOR,SAAUW,MAGxC,UAAC5C,EAAD,YACE,SAACC,EAAD,CACE6C,KAAK,SACLG,QAAS,kBAAM1C,GAAmBD,EAAzB,EAFX,SAIGA,GACC,SAAC,MAAD,CAAc4C,KAAK,UAEnB,SAAC,MAAD,CAAuBA,KAAK,WAG/BR,EAAQT,UACPJ,EAAeZ,EAAmBwB,EAAOR,SAAUW,QAEvD,SAAC9C,EAAD,CACEP,MACEmD,EAAQT,UACRhB,EAAmBwB,EAAOR,SAAUW,GAHxC,UAMKA,GAASF,EAAQT,WAChBW,GAASF,EAAQT,UAAYQ,EAAOR,YACrCQ,EAAOR,UAAYb,EAAE,gCAI9B,SAAClB,EAAD,CAAYiD,GAAG,qDAAf,UACE,SAAChD,EAAD,OAEF,SAACX,EAAD,CACEsD,KAAK,SACLf,KAAK,SACLiB,SAAUxC,IAAcmC,IAAYC,EAHtC,SAKGxB,EAAE,gCAEL,SAACxB,EAAD,CAAYuD,GAAG,UAAf,SAA0B/B,EAAE,4BAlG/B,KAwGR,E,SCjLD,EANqB,WACnB,OACE,SAACgC,EAAA,EAAD,WAAU,SAAC,EAAD,KAEb,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { Field, Form } from 'formik';\nimport { ReactComponent as Google } from 'images/icons/google.svg';\n\nexport const Container = styled.div`\n  max-width: ${p => p.theme.breakpoints[0]};\n  display: flex;\n  align-self: center;\n  margin: 0 auto;\n  padding: 0 20px;\n  position: absolute;\n  z-index: 2;\n  top: 302px;\n\n  @media screen and (min-width: ${p => p.theme.breakpoints[1]}) {\n    max-width: ${p => p.theme.breakpoints[1]};\n    padding: 0 32px;\n    top: 443px;\n  }\n\n  @media screen and (min-width: ${p => p.theme.breakpoints[2]}) {\n    max-width: ${p => p.theme.breakpoints[2]};\n    padding: 0px;\n    position: relative;\n    margin: 0;\n    top: 0px;\n  }\n`;\n\nexport const StyledForm = styled(Form)`\n  width: 335px;\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  padding: 32px 28px;\n  background-color: ${p => p.theme.colors.formBgCol};\n  border-radius: ${p => p.theme.radii.form};\n  box-shadow: 0px 4px 48px rgba(0, 0, 0, 0.1);\n  transition: ${p => p.theme.transitions.main};\n  @media screen and (min-width: ${p => p.theme.breakpoints[1]}) {\n    width: 500px;\n    padding: 44px 50px;\n  }\n`;\n\nexport const TitleContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 15px;\n  justify-content: space-between;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 18px;\n  font-family: ${p => p.theme.fonts.main};\n  font-style: normal;\n  font-weight: ${p => p.theme.fontWeights[2]};\n  font-size: 24px;\n  line-height: ${p => p.theme.lineHeights.userLink};\n  letter-spacing: ${p => p.theme.letterSpacings.content};\n  font-feature-settings: 'liga' off;\n  overflow-wrap: normal;\n  color: ${p => p.theme.colors.btnTextLight};\n  @media screen and (min-width: ${p => p.theme.breakpoints[1]}) {\n    margin-bottom: 32px;\n    font-size: 28px;\n  }\n`;\n\nexport const InputContainer = styled.div`\n  width: 100%;\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  @media screen and (min-width: ${p => p.theme.breakpoints[1]}) {\n    gap: 24px;\n  }\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  &:hover > *,\n  &:focus-within > * {\n    opacity: 1;\n  }\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  display: block;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: ${p => p.theme.fontWeights[0]};\n  line-height: ${p => p.theme.lineHeights.searchSelect};\n  letter-spacing: ${p => p.theme.letterSpacings.content};\n  padding: 12px 12px 12px 40px;\n  opacity: 0.8;\n  color: ${p => p.theme.colors.inputPh};\n  outline: none;\n  background-color: transparent;\n  border-radius: ${p => p.theme.radii.btnStandart};\n  border: ${p => p.theme.borders.inputStandart};\n  transition: ${p => p.theme.transitions.main};\n  border-color: #fafafa30;\n  ${p => p.color === 'normal' && `border-color: #FAFAFA30`};\n  ${p => p.color === 'inValid' && `border-color: #E74A3B`};\n  ${p => p.color === 'notSecure' && `border-color: #F6C23E`};\n  ${p => p.color === 'valid' && `border-color: #3CBC81`};\n\n  @media screen and (min-width: ${p => p.theme.breakpoints[1]}) {\n    font-size: 18px;\n    padding: 16px 70px 16px 50px;\n  }\n\n  &:hover:not(:disabled) {\n    border-color: ${p => p.theme.colors.inputPh};\n    color: ${p => p.theme.colors.inputPh};\n    opacity: 1;\n  }\n  &:disabled {\n    cursor: not-allowed;\n  }\n`;\n\nexport const Button = styled.button`\n  align-self: center;\n  width: 100%;\n  height: 45px;\n  padding: 12px;\n  display: block;\n  font-family: ${p => p.theme.fonts.main};\n  font-style: normal;\n  font-size: 16px;\n  margin-top: 8px;\n  font-weight: ${p => p.theme.fontWeights[0]};\n  line-height: ${p => p.theme.lineHeights.btnText};\n  color: ${p => p.theme.colors.btnTextLight};\n  background-color: ${p => p.theme.colors.mainAccent};\n  border-radius: ${p => p.theme.radii.btnStandart};\n  border: transparent;\n  outline: transparent;\n  cursor: pointer;\n  transition: ${p => p.theme.transitions.main};\n  @media screen and (min-width: ${p => p.theme.breakpoints[1]}) {\n    margin-top: 20px;\n  }\n  &:focus:not(:disabled),\n  &:hover:not(:disabled) {\n    color: ${p => p.theme.colors.btnHoverBg};\n  }\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.8;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  position: absolute;\n  bottom: -21px;\n  left: 50%;\n  transform: translateX(-50%) translateY(50%);\n  font-size: 14px;\n  font-weight: ${p => p.theme.fontWeights[0]};\n  line-height: ${p => p.theme.lineHeights.searchSelect};\n  color: ${p => p.theme.colors.inputPh};\n  text-decoration-line: underline;\n  transition: ${p => p.theme.transitions.main};\n  @media screen and (min-width: ${p => p.theme.breakpoints[1]}) {\n    font-size: 16px;\n    bottom: -18px;\n  }\n  &:focus,\n  &:hover {\n    text-decoration: none;\n    outline: transparent;\n  }\n`;\n\nexport const StatusBox = styled.div`\n  font-size: 12px;\n  margin-top: 8px;\n  font-weight: ${p => p.theme.fontWeights[0]};\n  line-height: ${p => p.theme.lineHeights.searchSelect};\n  transition: ${p => p.theme.transitions.main};\n  color: #e74a3b;\n  ${p => p.color === 'notSecure' && `color: #F6C23E`};\n  ${p => p.color === 'valid' && `color: #3CBC81`};\n  @media screen and (min-width: ${p => p.theme.breakpoints[1]}) {\n    font-size: 14px;\n  }\n`;\n\nexport const ErrorBox = styled.div`\n  max-width: 60%;\n  height: auto;\n  overflow-wrap: break-word;\n  align-self: baseline;\n  margin-bottom: 12px;\n  font-size: 12px;\n  text-align: end;\n  font-weight: ${p => p.theme.fontWeights[0]};\n  line-height: ${p => p.theme.lineHeights.searchSelect};\n  transition: ${p => p.theme.transitions.main};\n  color: #e74a3b;\n  @media screen and (min-width: ${p => p.theme.breakpoints[1]}) {\n    font-size: 14px;\n    max-width: 70%;\n  }\n`;\n\nexport const PassIconBox = styled.div`\n  position: absolute;\n  display: flex;\n  gap: 6px;\n  height: 100%;\n  top: 0px;\n  right: 0px;\n  padding-top: 16px;\n  padding-right: 14px;\n  transition: ${p => p.theme.transitions.main};\n  @media screen and (min-width: ${p => p.theme.breakpoints[1]}) {\n    padding-right: 18px;\n    padding-top: 20px;\n    gap: 10px;\n  }\n`;\n\nexport const ShowPasswordBtn = styled.button`\n  top: 0px;\n  right: 0px;\n  margin: 0px;\n  padding: 0px;\n  display: flex;\n  width: 18px;\n  height: 18px;\n  transform: translateY(-25%);\n  background-color: transparent;\n  cursor: pointer;\n  border: none;\n  color: #fafafa80;\n  transition: ${p => p.theme.transitions.main};\n  &:focus,\n  &:hover {\n    color: #fafafa;\n  }\n  @media screen and (min-width: ${p => p.theme.breakpoints[1]}) {\n    width: 24px;\n    height: 24px;\n    transform: translateY(-5%);\n  }\n`;\n\nexport const GoogleLink = styled(Link)`\n  align-self: center;\n`;\n\nexport const GoogleIcon = styled(Google)`\n  width: 20px;\n  height: 20px;\n  animation: pulse 2s infinite;\n  @media screen and (min-width: 768px) {\n    width: 30px;\n    height: 30px;\n    margin-top: 10px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 32px;\n    height: 32px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik } from 'formik';\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai';\nimport { useTranslation } from 'react-i18next';\nimport { selectIsLoading } from 'redux/Auth/authSelectors';\nimport { register } from 'redux/Auth/authOperations';\nimport { useValidation, useErrorStatus } from '../../helpers';\nimport { useAuth } from '../../hooks';\nimport { setError } from '../../redux/Auth/authSlice';\n\nimport {\n  UserIconStyled,\n  EmailIconStyled,\n  LockIconStyled,\n  ErrorIconStyled,\n  CheckIconStyled,\n  PassWarnIconStyled,\n  PassErrorIconStyled,\n  PassValidIconStyled,\n} from '../../components/AuthIcons';\n\nimport {\n  Container,\n  Label,\n  Input,\n  StyledForm,\n  Title,\n  InputContainer,\n  Button,\n  StyledLink,\n  StatusBox,\n  ErrorBox,\n  TitleContainer,\n  ShowPasswordBtn,\n  PassIconBox,\n  GoogleIcon,\n  GoogleLink,\n} from './RegisterForm.styled';\n\nconst RegisterForm = () => {\n  const [isShowPassword, setIsShowPassword] = useState(false);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n  const { error } = useAuth();\n  const { ErrorStatus, getPassErrorStatus } = useErrorStatus();\n  const { registerValidationSchema } = useValidation();\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    if (error !== null) {\n      setTimeout(() => {\n        dispatch(setError(null));\n      }, 5000);\n    }\n  }, [dispatch, error]);\n\n  const handleSubmitForm = ({ name, email, password }, { resetForm }) => {\n    dispatch(register({ name, email, password })).then(\n      res => !res.error && resetForm()\n    );\n  };\n\n  const statusIcon = {\n    valid: <CheckIconStyled />,\n    inValid: <ErrorIconStyled />,\n    notSecure: <PassWarnIconStyled />,\n  };\n\n  const passStatusIcon = {\n    valid: <PassValidIconStyled />,\n    inValid: <PassErrorIconStyled />,\n    notSecure: <PassWarnIconStyled />,\n  };\n\n  return (\n    <Container>\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        onSubmit={handleSubmitForm}\n        validationSchema={registerValidationSchema}\n        validateOnBlur\n      >\n        {({ errors, touched, isValid, dirty }) => (\n          <StyledForm>\n            <TitleContainer>\n              <Title>{t('auth.title.register')}</Title>\n              {error && <ErrorBox>{ErrorStatus[error]}</ErrorBox>}\n            </TitleContainer>\n            <InputContainer>\n              <Label htmlFor=\"name\">\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder={t('auth.form.name')}\n                  disabled={isLoading}\n                  color={touched.name && getPassErrorStatus(errors.name, dirty)}\n                />\n                <UserIconStyled\n                  color={touched.name && getPassErrorStatus(errors.name, dirty)}\n                />\n                {touched.name &&\n                  statusIcon[getPassErrorStatus(errors.name, dirty)]}\n                {errors.name && touched.name ? (\n                  <StatusBox>{errors.name}</StatusBox>\n                ) : null}\n              </Label>\n              <Label htmlFor=\"email\">\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder={t('auth.form.email')}\n                  disabled={isLoading}\n                  color={\n                    touched.email && getPassErrorStatus(errors.email, dirty)\n                  }\n                />\n                <EmailIconStyled\n                  color={\n                    touched.email && getPassErrorStatus(errors.email, dirty)\n                  }\n                />\n                {touched.email &&\n                  statusIcon[getPassErrorStatus(errors.email, dirty)]}\n                {errors.email && touched.email ? (\n                  <StatusBox>{errors.email}</StatusBox>\n                ) : null}\n              </Label>\n              <Label htmlFor=\"password\">\n                <Input\n                  type={isShowPassword ? 'text' : 'password'}\n                  name=\"password\"\n                  placeholder={t('auth.form.password')}\n                  disabled={isLoading}\n                  color={\n                    touched.password &&\n                    getPassErrorStatus(errors.password, dirty)\n                  }\n                />\n                <LockIconStyled\n                  color={\n                    touched.password &&\n                    getPassErrorStatus(errors.password, dirty)\n                  }\n                />\n                <PassIconBox>\n                  <ShowPasswordBtn\n                    type=\"button\"\n                    onClick={() => setIsShowPassword(!isShowPassword)}\n                  >\n                    {isShowPassword ? (\n                      <AiOutlineEye size=\"24px\" />\n                    ) : (\n                      <AiOutlineEyeInvisible size=\"24px\" />\n                    )}\n                  </ShowPasswordBtn>\n                  {touched.password &&\n                    passStatusIcon[getPassErrorStatus(errors.password, dirty)]}\n                </PassIconBox>\n                <StatusBox\n                  color={\n                    touched.password &&\n                    getPassErrorStatus(errors.password, dirty)\n                  }\n                >\n                  {((dirty && touched.password) ||\n                    (!dirty && touched.password && errors.password)) &&\n                    (errors.password || t('auth.status.secure'))}\n                </StatusBox>\n              </Label>\n            </InputContainer>\n            <GoogleLink to=\"https://so-yummy-98ev.onrender.com/api/auth/google\">\n              <GoogleIcon />\n            </GoogleLink>\n            <Button\n              type=\"submit\"\n              name=\"button\"\n              disabled={isLoading || !isValid || !dirty}\n            >\n              {t('auth.form.button.register')}\n            </Button>\n            <StyledLink to=\"/signin\">{t('auth.form.link.login')}</StyledLink>\n          </StyledForm>\n        )}\n      </Formik>\n    </Container>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from '../../components/RegisterForm';\nimport AuthBody from '../../components/AuthBody';\n\n\nconst RegisterPage = () => {\n  return (\n    <AuthBody><RegisterForm /></AuthBody>\n  )\n};\n\nexport default RegisterPage;\n"],"names":["Container","styled","p","theme","breakpoints","StyledForm","Form","colors","formBgCol","radii","form","transitions","main","TitleContainer","Title","fonts","fontWeights","lineHeights","userLink","letterSpacings","content","btnTextLight","InputContainer","Label","Input","Field","searchSelect","inputPh","btnStandart","borders","inputStandart","color","Button","btnText","mainAccent","btnHoverBg","StyledLink","Link","StatusBox","ErrorBox","PassIconBox","ShowPasswordBtn","GoogleLink","GoogleIcon","Google","useState","isShowPassword","setIsShowPassword","isLoading","useSelector","selectIsLoading","dispatch","useDispatch","error","useAuth","useErrorStatus","ErrorStatus","getPassErrorStatus","registerValidationSchema","useValidation","t","useTranslation","useEffect","setTimeout","setError","statusIcon","valid","inValid","notSecure","passStatusIcon","initialValues","name","email","password","onSubmit","resetForm","register","then","res","validationSchema","validateOnBlur","errors","touched","isValid","dirty","htmlFor","type","placeholder","disabled","onClick","size","to","AuthBody"],"sourceRoot":""}